@import "burger.css";
@import "peripheral.css";

/* wanted to put in own file but wasnt compatible with live reload solution... */
:root { /* general vars */
  --space: 1.5rem;
  --space-lg: 2rem;
  --space-sides: var(--space-lg); /* inner horizontal margin */
  --space-edges: var(--space-sides); /* size of outer edges  */
  --space-top: 2rem; /* top margin above header */
  /* --media-width-main: 80%; /1* tho actually maybe, just calc from space-sides? *1/ */
  --media-width-main: calc(100% - 2 * var(--space-lg)); /* would it be context dependent or just use root 100% i guess uh */
  --banner-height: 600px;
  --logo-ratio: 0.4060; /* lol, 41.25 actual ratio, 40.6 works on chrome desktop, 40.0 on safari ios... */ /* just use img... */ /* or make logo look like i want in first place - needs higher-res or vector bounce anyways */
  /* --header-with-menu-height: calc(14 * var(--space)); /1* not truly dynamic bc of annoying sticky *1/ */
  --header-height: calc(3 * var(--space));
  --header-with-menu-height: 18rem; /* not truly dynamic bc of annoying sticky */
  /* --header-with-menu-height: 18em; /1* not truly dynamic bc of annoying sticky *1/ */
  /* --menu-width: 60%; */
  --menu-width-fraction: 0.75;

  --line-width: 2px; /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --scale: 1.0; /* px line-width drifts when font scales so must compensate... better way? */

  --hue-1: 180;
  --hue-2:   8;
  --hue-3: 192;
  --lum-dark-1:    9%;
  --lum-dark-2:   12%;
  --lum-light-1:  calc(100% - var(--lum-dark-1));
  --lum-light-2:  calc(100% - var(--lum-dark-2));

  --light-1: hsl(var(--hue-2), 20%, var(--lum-light-2));
  --light-text: hsl(29, 35%, 86%);


  --nav-accent: hsla(var(--hue-3), 40%, 20%, 0.35);
  --neutral-accent: #9ae; /* link? */
  --dark-1:     hsl(var(--hue-1),  7%,  var(--lum-dark-1));
  --dark-2:     hsl(var(--hue-2),  7%,  var(--lum-dark-2));

  --opacity-regular:  0.45;
  --opacity-faint:    0.25;

  --box-regular-color:    hsla(0, 0%, var(--lum-dark-1), var(--opacity-regular));
  --box-faint-color:      hsla(0, 0%, var(--lum-dark-1), var(--opacity-faint));
  --box-regular-color-flip: var(--box-regular-color); /* light mode always dark shadows */
  --box-faint-color-flip:   var(--box-faint-color);

  --gradient-bg-main: linear-gradient(-77deg, hsl(280, 12%, 12%), hsl(100, 12%, 12%));

  --fg-1:       var(--dark-1);
  --fg-2:       var(--dark-2);
  --lum-fg-1:   var(--lum-dark-1);
  --lum-fg-2:   var(--lum-dark-2);
  --bg-1:       var(--light-1);
  --bg-2:       var(--light-text);
  --lum-bg-1:   var(--lum-light-1);
  --lum-bg-2:   var(--lum-light-2);
}
/* @media (prefers-color-scheme: dark) { */
 /* { */
  :root { /* OS has requested dark mode */
    --fg-1:     var(--light-1);
    --fg-2:     var(--light-text);
    --lum-fg-1: var(--lum-light-1);
    --lum-fg-2: var(--lum-light-2);
    --bg-1:     var(--dark-1);
    --bg-2:     var(--dark-2);
    --lum-bg-1: var(--lum-dark-1);
    --lum-bg-2: var(--lum-dark-2);
    --box-regular-color-flip: hsla(0, 0%, var(--lum-light-1), var(--opacity-regular));
    --box-faint-color-flip:   hsla(0, 0%, var(--lum-light-1), var(--opacity-faint));
  }
  #logo-top { /* invert then rotate hue to restore blue text */
    filter: invert() hue-rotate(180deg);
  }
/* } */
@media screen and (min-width: 800px) {
  :root {
    --space: 2.0rem;
    --space-lg: 3.0rem;
    /* --media-width-main: 90%; /1* tho actually maybe, just calc from space-sides? *1/ */
  }
}
@media screen and (min-width: 1100px) {
  .line { /* i guess x overflow only important on ios, so we hype here */
    width: 200%; /* extend out like balls */
  }
  :root {
    --space-edges: 10vw;
    /* --space-edges: calc(var(--space) + 10vw); */
  }
}
@media screen and (max-width: 650px) {
  :root {
    --space: 1.0rem;
    --space-lg: 1.5rem;
    --space-edges: 0.8rem; /* perfectly makes room for macos scrollbar */
    /* --media-width-main: 90%; /1* tho actually maybe, just calc from space-sides? *1/ */

    --scale: 0.9;
    font-size: 0.90rem;
    /* font-size: calc(100% * var(--scale)); */
    /* fuck off this goes lunatic */
    /* will avoid trying more, for now */
    /* except looks/works shit as balls on iphonex if dont scale down fuuuck */
  }
}
@media screen and (max-width: 500px) {
  :root { /* mobile vars */
    --space-sides: var(--space); /* remember -sides based on the smaller num for mobile (since margins are more precious) */
    font-size: 0.85rem;
    --media-width-main: 90%; /* test */
    /* --media-width-main: calc(100vw - 2 * var(--space-edges)); /1* would it be context dependent or just use root 100% i guess uh *1/ */
  }
}
@media screen and (max-width: 400px) {
  :root {
    font-size: 0.80rem;
    --space-sides: calc(0.5 * var(--space)); /* remember -sides based on the smaller num for mobile (since margins are more precious) */
    --space-edges: calc(0.25 * var(--space));
  }
  #top-banner {
    padding-top: 0;
  }
  .caption-inset {
    /* font-size: 0.65rem; */
    /* ok whatever no captions on iphone then */
    visibility: hidden;
  }
}

li {
  list-style: none;
}
  nav {
    max-height: var(--space);
  }
  .nav-links li {
    /* display: none; */
    visibility: hidden;
    height: 100%;
  }
  .show-in-menu {
    display: none;
  }
  #burger-check:checked ~ header menu .show-in-menu {
    display: block;
    font-size: 0.8rem;
  }
  #burger-check:checked ~ header menu nav .nav-links {
    position: relative;
    flex: 1 1 auto;
    flex-wrap: wrap;
    font-size: 1.3rem;

    /* padding: calc(1 * var(--space)); /1* this is what fucked me! *1/ */
    /* well poor design and stupid subpixel bullshit-shifting is what fucked me but yeah */
    padding: 1rem var(--space);
  }
  #burger-check:checked ~ header menu nav .nav-links li:first-letter {
    font-size: 1.2em;
  }
  #burger-check:checked ~ header menu nav {
    position: relative;
    top: 0;
    /* width: var(--menu-width); */
    max-height: var(--header-with-menu-height); /* for animation purposes i guess */
    /* margin: 0; */
    border: 0;
  }
  #burger-check:checked ~ header menu {
    flex: 0 2 auto;
    min-width: calc(100% * var(--menu-width-fraction));
    /* margin-left: auto; */
    margin: auto;
    /* max-width: 90%; */
    /* overflow-x: hidden; */
    /* border-top:     0; */
    /* border-bottom:  0; */
    order: 4;
    border:     var(--line-width) solid currentColor;
  }
  /* STOP WASTING TIME TRYING AND JUST REDO IT IN GRID IF YOU SO DESPERATELY NEED THE EFFECT */ /* GAAAAH */
  /* especially considering I need to learn grid. WHY AM I SO USELESS */
  #burger-check:checked ~ header menu::before,
  #burger-check:checked ~ header menu::after {
    content: "";
    position: absolute;
    width: var(--line-width);
    background-color: var(--fg-1);
    /* its so close, but loses when base font-size is scaled... */ /* how get around? */
    /* --height: (3rem - var(--space) + var(--scale) * var(--line-width)); */
    --height: calc(2rem - 0.5*var(--line-width));
    /* well SHIT im dumb */
    /* when equally wrong two ways, split the difference... seems to do it. */

    /* --height: (3rem - var(--space) + var(--line-width) / var(--scale)); */
    /* was scaling backwards w space like that due to padding on nav... */
  }
  #burger-check:checked ~ header menu::before {
    left:  calc(0px - var(--line-width));
    /* top: 0; */
    /* bottom: calc(0rem - 2.0 * var(--space)); */
    /* falls apart when scaling... */
    /* bottom: calc(-0px - var(--line-width) - (var(--height))); /1* too long on iphone *1/ */
    bottom: calc(-0px - (var(--height))); /* too short on wide desktop */
    /* its all connected to --space changing, but I dont get how. */

    /* height: calc(var(--height) + var(--line-width)); */
    height: calc(var(--height));
    /* z-index: -200; /1* does fuckall *1/ */
  }
  /* #burger-check:checked ~ .header-wrapper header menu nav::after { */
  /* #burger-check:checked ~ header menu nav::after { */
  #burger-check:checked ~ header menu::after { /* from top right corner and up */
    right: calc(0px - var(--line-width));
    /* top: calc(0rem - 3.1 * var(--space)); */
    /* bottom: calc(0px + var(--line-width)); */
    /* adding anything just lifts it off bottom obviously, so why not just adjust height? */
    bottom: 0;
    height: calc(var(--header-with-menu-height) - (var(--height)) - var(--space-top));
    /* "vars" are so deceptive, everything was broken cause neither def nor usage was in paren... */
  }
  #burger-check:checked ~ .line-header {
    /* position: absolute; */
    top:  var(--header-with-menu-height);
    margin: 0;
  }

  #burger-check:checked ~ header {
    margin-top: 0; /* gets easier to calc if kill top margin since --space keeps changing otherwise */
    margin-right: var(--line-width);
    /* top: 0; */
    /* width: 100%; /1* makes it very _thin_??? wtf *1/ */
    /* z-index: 21; */
    min-height:  var(--header-with-menu-height);
    font-size: 1.5rem;
    justify-content: space-between;
    align-content: space-evenly;
    /* padding: 0; */

    /* border-bottom: var(--line-width) solid; */
  /* possibly not border bottom but a line that meets left side */
    /* border-right: var(--line-width) solid; */
  }
  #burger-check:checked ~ header .header-logo {
    position: relative;
    margin: auto;
    /* font-size: 1.5rem; */ /* try on entire header instead */
    /* min-width: calc(var(--menu-width) - 2 * var(--line-width)); /1* match expanded nav menu, but let its lines pass around... *1/ */
    min-width: calc(100% * var(--menu-width-fraction) - 2 * var(--line-width)); /* match expanded nav menu, but let its lines pass around... */
    text-align: center;
    /* need to get it above rest so line coming from right can flow behind */
    z-index: 35;
    background: var(--bg-1);
    /* left: calc(4 * var(--space)); */
  }
  /* #burger-check:checked ~ header .header-logo::before { */
  /*   /1* try mask any line extending above *1/ */
  /*   content: ""; */
  /*   position: absolute; */
  /*   width: calc(100% + var(--line-width)); */
  /*   background: var(--bg-1); */
  /*   height: 100%; */
  /*   /1* top: -4rem; *1/ */
  /*   left: 0; */
  /*   /1* bottom: calc(1.15 *  (var(--space) * 1.5)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* bottom: calc(1.156 * (var(--space) * 1.0) + var(--line-width)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* bottom: calc(1.156 * 2em + var(--line-width)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* bottom: calc(100% - 2 * var(--line-width)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* bottom: calc(100% - 2 * var(--line-width)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* bottom: calc(100% - 2 * var(--line-width)); /2* 1.15 being line-height? 1.5 our font size multiple *2/ *1/ */
  /*   /1* top: -100%; *1/ */
  /*   z-index: -1; /1* eh ok needs to be -1 to not clip header-logo, but still covers line so. does absolute make z-index relative? lols *1/ */
  /* } */
  /* #burger-check:checked ~ menu nav::after { */
  /*   content: ""; */
  /*   position: absolute; */
  /*   left: -200%; */
  /*   top: var(--space-lg); */
  /*   /1* bottom: -1rem; *1/ */
  /*   border-bottom: 2px solid; */
  /*   background: var(--bg-1); */
  /*   height: calc(4 * var(--space)); */
  /*   width: 400%; */
  /*   z-index: -1; */
  /* } */
  #burger-check:checked ~ header menu nav .nav-links li {
    display: block;
    visibility: visible;
    min-width: 50%;
    flex: 1 1 auto;
  }
  #show-menu {
    display: none;
  }
.hidden { visibility: hidden; }

menu {
  /* flex: 1; */
  /* overflow-x: scroll; */
  position: relative;
  display: flex;
}
nav {
  /* position: relative; */
  display: flex;
  align-items: center;
  flex: 1 0 auto;
  min-height: 2em; /* h1 */ /* dont think right basing on space, just use rem */
  min-width: calc(3 * var(--space-lg));
  /* width: 100%; */
  /* width: auto; */
  /* margin: auto var(--space); */
  /* overflow-x: scroll; /1* seems more reasonable than a burgher for a page with nowhere to navigate *1/ */
  /* overflow-x: hidden; /1* seems more reasonable than a burgher for a page with nowhere to navigate *1/ */
  background: linear-gradient(-77deg, var(--bg-1) 20%, var(--nav-accent));
  border-top:     var(--line-width) solid currentColor;
  border-bottom:  var(--line-width) solid currentColor;
  transition: max-height 0.3s ease-in-out;
}
.nav-links {
  /* margin: 0 var(--space); */
  /* display: flex; */
  /* flex-wrap: nowrap; */
  /* justify-content: space-between; */
  /* align-items: center; */
}
.nav-links > * {
  margin: 0 0.5rem;
}
/* #theme-toggle:checked ~ .themable { */
/* #theme-toggle:checked ~ body { */
/* #theme-toggle:checked ~ main { */
/*   /1* ok so can select main but not body OUCH. *1/ */
/* /1* .themable { *1/ */
/*     --bg-1:     var(--dark-1); */
/*     --bg-2:   var(--dark-2); */
/*     --fg-1:     var(--light-1); */
/*     --fg-2:   var(--light-text); */
/*     --box-regular-color-flip: hsla(0, 0%, var(--lum-light-1), var(--opacity-regular)); */
/*     --box-faint-color-flip:   hsla(0, 0%, var(--lum-light-1), var(--opacity-faint)); */
/*     color: red; */
/* } */
/* #theme-toggle:not(:checked) ~ main { */
/*   --bg-1:      var(--light-1); */
/*   --bg-2:    var(--light-text); */
/*   --fg-1:      var(--dark-1); */
/*   --fg-2:    var(--dark-2); */
/*   --box-regular-color-flip: var(--box-regular-color); /1* light mode always dark shadows *1/ */
/*   --box-faint-color-flip:   var(--box-faint-color); */
/*     color: blue; */
/* } */

* {
  box-sizing: border-box;
  margin:  0;
  padding: 0;
  transition: all 0.15s;
}

html {
  height: 100%;
  overflow-x: hidden; /* gotta be on both or doesnt work on iphone hmm */
}

body {
  font-family: 'Open Sans', sans-serif;
  color: var(--fg-1);
  background-color: var(--bg-1);
  width: calc(100% - 2 * var(--space-edges));
  max-width: 1000px;
  margin: auto;
  /* margin: 0 var(--space-edges); */
  /* position: relative; */
  /* no overflow hidden on body = iphone can scroll sideways. on body works but sticky header breaks */
  /* -webkit-overflow-x: hidden; nope... no work */
  /* overflow-x: hidden; /1* gotta be on both or doesnt work on iphone hmm *1/ */
  /* -webkit-overflow-scrolling: touch; */
}
header {
  /* TODO: ios issue: zoom in and back out, main left border faintly visible left side of header */
  position: sticky;
  top: 0;
  min-height: var(--header-height);
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: space-between;
  background-color: var(--bg-1);
  z-index: 11;
  margin-top: var(--space-top);
  padding: 0 calc(var(--space));
  margin-right: var(--line-width); /* make main right border stay "outside" right edge of header, needed because of particular effect/design... */
}

.fader {
  position: relative;
  z-index: 25;
  width: 100%;
}
.fade-to-black {
  position: absolute;
  width: 100%;
  /* z-index: 29; */
}
.fade-to-black.top {
  top: 0;
  height: calc(4 * var(--space));
  background: linear-gradient(180deg, var(--bg-1) 50%, hsl(0, 0%, 0%, 0.0) 100%);
}
.fade-to-black.between {
  --height: 3.5;
  height: calc(var(--height) * var(--space-lg));
  top:    calc(-0.5 * var(--height) * var(--space-lg));
  /* background: linear-gradient(0deg, transparent 0%, var(--bg-2) 50%, transparent 100%); */
  /* background: linear-gradient(0deg, transparent 10%, */
  /*     hsl(var(--hue-3), 8%, var(--lum-bg-2)) 50%, */
  /*     transparent 90%); */
  /* background: linear-gradient(0deg, transparent 0%, */
  /*     hsl(var(--hue-3), 8%, var(--lum-bg-2)) 50%, */
  /*     transparent 100%); */
  background: linear-gradient(0deg,
      hsl(var(--hue-3), 2%, var(--lum-bg-1), 0.0)  0%,
      hsl(var(--hue-3), 8%, var(--lum-bg-2)) 50%,
      hsl(var(--hue-3), 28%, var(--lum-bg-2), 0.0)  100%);
}

.fade-to-black.between.red {
  background: linear-gradient(0deg, transparent 0%,
      hsl(var(--hue-2), 8%, var(--lum-bg-2)) 50%,
      transparent 90%);
}
/* :local-link { */ /*   text-decoration: none; */ /* } */
.nav-link li a {
  color: var(--fg-1);
  /* font-size: 0.8em; */
}
.link-anchor::before { /* have to compensate due to our sticky header. */
  display: block;
  content: " ";
  --offset: calc(var(--space-lg) + var(--header-with-menu-height));
  margin-top: calc(0rem - var(--offset));
  height: var(--offset);
  visibility: hidden;
  pointer-events: none;
  z-index: -1;
}

/* TODO: line border cross pattern for eg images, in same way as site main, connecting to main borders... */
/* together with similar for topnav and feels "almost" proper design language ish */
/* could also run along down connecting to next section... */
.line { /* i guess x overflow only important on ios, so we hype -edges by media query */
  width: calc(var(--space-edges) + 100%); /* extend out one margin */
  background-color: var(--fg-1);
  height: var(--line-width);
}
@media screen and (min-width: 1100px) {
  .line { /* i guess x overflow only important on ios, so we hype here */
    width: 200%; /* extend out like balls */
  }
}

.line.line-header {
  position: sticky; /* starts between header and main, turns into demarcation */
  z-index: 20;
  top: var(--header-height); /* aand i forget why this works now. guess i set a min-height larger than regular banner height... */
  /* top: calc(var(--header-height) + var(--line-width)); /1* aand i forget why this works now. guess i set a min-height larger than regular banner height... *1/ */
  /* /1* ^^ NOPE so off *1/ */
  margin-top: var(--space); /* space before sticky starts */
  box-shadow: 2px 1px 17px 7px hsla(var(--hue-1), 35%, 40%, 0.09);
}
.line.bottom {
  position: absolute;
}
/* .line.bottom.v { /1* unlinke top-right equiv can just be (footer) side border...  vert line from lower left to main bottom... *1/ */
/*   left: 0; */ /*   bottom: 0; */
/*   height: 100%; */
/*   width: 1px; */
/*   z-index: -1; */
/* } */
.line.bottom.h { /* from bottom left and acting as main bottom border */
  top: 0;
  /* left: calc(0rem - var(--space-edges)); /1* extend on left instead of right width already good *1/ */
  right: 0; /* extend on left instead of right width already good */
}
.line.bottom.v.top { /* just to get our bottom "border" out left... */
  /* position: absolute; */
  top: 0;
  height: 4rem;
  z-index: 100;
}
.line-left { border-left: var(--line-width) solid; }
.line-right {
  border-right: var(--line-width) solid;
}
.lined-container {
  position: relative; /* need to be able to attach lines around */
  border: var(--line-width) solid;
}


a {
  color: var(--fg-2);
  text-decoration: none;
}
.footer-icons > a {
  padding: 0.5rem;
}
a:focus, a:hover {
  transform: scale(1.12);
  filter: brightness(120%) drop-shadow(0.2rem 0.2rem 0.1rem var(--bg-1));
  /* background: hsla(100, 10%, 10%, 0.4); */
}

.footer-icons > a:focus, .footer-icons > a:hover {
  /* i mean eh nothing behind tho haha. just use normal? */
  backdrop-filter: brightness(150%);
  -webkit-backdrop-filter: brightness(150%);
  background: hsla(100, 10%, 10%, 0.4);
  border-radius: 100%;
}

.header-logo h1 {
  display: inline;
}
.header-logo-text {
  display: inline-block;
  font-size: 0.90em;
  line-height: 0.80em;
}

main:hover {
  /* backdrop-filter: brightness(105%); */ /* makes logo bg drop fixed heh... */
}
.main-content {
  border: var(--line-width) solid ;
  border-bottom: 0; /* covered by .line-bottom-h */
  background: var(--gradient-bg-main);
  /* just give up padding and attach margin to sections instead... */
  margin-top: var(--space-lg);

  display: flex;
  flex-flow: row wrap;
  justify-items: center;
  position: relative;
  box-shadow: inset 2px 1px 17px 7px var(--box-faint-color);
}
pre {
  white-space: pre-wrap;
  overflow: hidden;
  overflow-wrap: break-word;
  word-wrap: break-word;
}

.column {
  margin: var(--space);
  text-align: left;
}

.logo-tolgraven {
  background: url("../media/tolgrav.png");
  background-size: 100%;
  background-repeat: no-repeat;
  opacity: 0.09;
  border-radius: 38%;
  border: 0.35em solid var(--bg-1); /* hmm gotta make a bit device-dependent */
  /* box-shadow: 5px 5px 7px 2px var(--box-regular-color); */
  box-shadow: 5px 5px 7px 2px var(--box-regular-color-flip);
}
@keyframes fade-in-logo {
  0% {
    opacity: 0.00;
    background-size: 85%;
    border-radius: 63%;
  } 65% {
    border: 0.35em solid transparent; /* hmm gotta make a bit device-dependent */
  } 100% {
    border: 0.35em solid var(--bg-1); /* hmm gotta make a bit device-dependent */
    opacity: 0.09;
    filter: invert() hue-rotate(180deg);
  }
}
.logo-bg {
  margin-left:  auto; /* better center it automatically instead of counting n shit... */
  margin-right: auto;

  z-index: -1; /* was -1 TODO need a clear order since layers are adding up... not just -1/100 lols */

  width: var(--media-width-main);
  height: 0; /* hacky way to size by bg-image height... */
  padding-bottom: calc(var(--media-width-main) * var(--logo-ratio)); /* height ratio of logo */
  box-shadow: inset 2px 2px 12px 7px var(--box-regular-color-flip);
  /* overflow: hidden; */
}
#logo-top {
  position: sticky;
  top:  calc(var(--space) * 5); /* small header and a bit, position for when starts moving off sticky, which is also good fallback when parallax missing... */
  margin-top: calc(1.5 * var(--space));
  animation: fade-in-logo 4s;

}
#logo-bottom {
  position: absolute;
  bottom: 0;
  /* bottom:  calc(var(--space) * 4); */
  /* margin-bottom: calc(1.5 * var(--space-lg)); */
  /* same as top but (un)inverted and coming from below */
}
.section-bordered { /* already got by default but if need to wrap something else */
  border-top:    var(--line-width) solid; /* so, every other top+bottom? */
  border-bottom: var(--line-width) solid; /* this covers/cancels bottom border */
}
.noborder {
  border: 0;
}

/* .section-bg-wrapper { /1* wraps section faded bg image. *1/ */
/*   position: relative; */
/*   padding: var(--space-lg) 0; /1* needed as sorta floating around section ignoring margins *1/ */
/*   overflow-x: hidden; */
/*   /1* overflow-y: hidden; /2* right. need to actively scroll _this_ el to make para work :/ useless without js then... *2/ *1/ */
/*   /1* overflow-y: scroll; /2* right. need to actively scroll _this_ el to make para work :/ useless without js then... *2/ *1/ */
/*   /1* perspective: 100px; /2* makes tfZ work on ::after/child el. BUT no parallax still? lol *2/ *1/ */
/*   /1* perspective-origin: 0; *1/ */
/*   /1* height: 50vw; *1/ */
/* } */
/* .section-bg-wrapper::after { /1* workaround to set only bg opacity *1/ */
/*   /1* so, later have mixin for this, cant sep bg url to own class nor through style on el.. *1/ */
/*   content: ""; */
/*   background: url("../media/vim-code.jpg"); */
/*   background-size: 100%; /1* went crazy w/o size, spanning entire page which incidentally looks p cool *1/ /1* but not what I was attempting... but explore *1/ */
/*   background-repeat: no-repeat; */
/*   /1* just cant seem to get perspective achieving parallax (tho tfZ works) here even if explit set parent height (which cant be doing anyways since content sizing this is dynamic) */
/*    * tho ::after can def work np... something else is wrong. maybe if image put tot uncoupled from section div which then acts as a mask? is that a thing? haha *1/ */
/*   /1* transform: translateZ(-10px) scale(1.2); /2* not actually being translated... 1.1 is the 1:1 scale btw obv but 1.2 looks good in this case *2/ *1/ */
/*   transform: translateZ(-30px) scale(1.5); /1* not actually being translated... 1.1 is the 1:1 scale btw obv but 1.2 looks good in this case *1/ */
/*   /1* transform: translateZ(-30px) scale(1.0); /2* not actually being translated... 1.1 is the 1:1 scale btw obv but 1.2 looks good in this case *2/ *1/ */
/*   transform-style: preserve-3d; */
/*   transform-origin: 0; */

/*   opacity: 0.19; */
/*   top: 0; left: 0; bottom: 0; right: 0; */
/*   position: absolute; */
/*   z-index: 0; */
/* } */


section { /* one main section (img + header + piece of content) */
  flex: 1 1 auto;
  position: relative;
  justify-content: center;
  align-items: middle;
  padding:   var(--space-lg) var(--space); /* for padding-less main: */
  /* border-bottom: calc(0.5 * var(--line-width)) solid; */
  /* border-top: calc(0.5 * var(--line-width)) solid; */
  border-top: var(--line-width) solid;
}
section > h1, .jumbo > h1 {
  text-align: center;
  margin-bottom: var(--space);
  margin-top:    var(--space);
}
.main-content > section:first-of-type { /* top section: no upper border */
  border-top: 0;
  /* margin-bottom: 0; */
}
.main-content > section:last-of-type { /* last section, no bottom border */
  margin-bottom: 0;
  /* border-bottom: 0; */
}

.no-seethrough { /* jk */ /* incidentally not easy to type on a proper vim setup */
  --opacity: 0.80;
  /* background: hsla(var(--hue),  8%,  var(--lum-bg-2), var(--opacity)); */
  --color-1: hsla(var(--hue-1),  38%,  var(--lum-bg-1), var(--opacity));
  --color-2: hsla(var(--hue-2),  36%,  var(--lum-bg-1), var(--opacity));
  /* background: linear-gradient(-30deg, var(--color-1), var(--fg-2)); */
  background: linear-gradient(-40deg, var(--color-1), var(--color-2));
}

.anim-gradient-bg {
  --opacity: 0.84;
  --deg: -40deg;
  --color-1: hsla(var(--hue-1),  30%,  var(--lum-bg-1), var(--opacity));
  --color-2: hsla(var(--hue-2),  40%,  var(--lum-bg-1), var(--opacity));
  /* background: linear-gradient(-30deg, var(--color-1), var(--bg-1)); */
  background: linear-gradient(var(--deg), var(--color-1), var(--color-2));
  /* background: linear-gradient(var(--deg), var(--color-1), var(--color-2)); */
  background-size: 230%;
  /* animation: gradient-bg 20s ease infinite; */
  backdrop-filter: blur(4px) contrast(70%);
  -webkit-backdrop-filter: blur(4px) contrast(70%);
}
@keyframes gradient-bg {
	0%     { background-position:   0% 50%;
	} 50%  { background-position: 100% 50%;
	} 100% { background-position:   0% 50%;
	}
}

section h1, article h1 { font-size: 2rem; } /* restore proper h1 from 1.5 bs */
.h0 { font-size: 2.5rem; }
.h0-responsive { /* size based on viewport, with sensible min-max */
  font-size: calc(2.5rem + 8vw);
}
.h-responsive { /* size based on viewport, with sensible min-max */
  font-size: calc(1.5rem + 3vw);
}
.buttons {
  display: flex;
  justify-content: space-around;
}

.media-container {
  /* width: 80%; */ /* hmm fucks up align... */
  position: relative;
  display: flex;
  flex-flow: column;
  align-items: center; /* align-items instead of justify-content because flow by column */
  justify-content: center;
  text-align: center;
}
.media-container p { /* img/video caption... */
  font-size: 0.85em; /* small captions */
  margin-top: 0.3em;
  width: var(--media-width-main);
  text-align: left;
}
video {
  height: auto;
}
.media {
  width: 100%;
  max-width: 700px;
  /* padding: var(--space) calc(0.5 * var(--space-sides)) 0.2rem calc(0.5 * var(--space-sides)); */
  margin: var(--space) calc(0.5 * var(--space)) 0.2rem calc(0.5 * var(--space));
  box-shadow: 2px 2px 12px 7px var(--box-regular-color);
  border-radius: 0.15rem;
}
.image-sm {
  width: calc(0.5 * var(--media-width-main));
  max-height: 300px;
  object-fit: cover; /* since we're setting max-height we must also ensure zooms instead of stretching */
}
.image-flex {
  flex: 1 0 auto;
  /* width: 50%; */
  /* height: auto; */
  max-width: 200px; /* tho then should actually INCREASE on small screens when 1col... */
  /* max-height: 300px; */
}
.image-inset {
  /* width: 20%; */
  margin-top: 0;
  margin-left: 0;
  /* float: left; */
  /* max-height: 300px; */
}
.fullwide { /* expand div back to full width of main despite regular paddings/margins */
  /* guess should work to only fuck w margin+width directly not left etc? */
  /* i guess this should be for only when breaking out of margin bs */
  /* not the other bg fullwide stuff... */
  margin: 0;
  position: relative;
  left: 0;
  /* left:  calc(0% - 0.5 * var(--space-sides)); */
  /* left:  calc(0% - 2.0 * var(--space-sides)); */
  /* width: calc(var(--media-width-main) + 4 * var(--space-sides)); */
  /* width: calc(100% + 4 * var(--space-sides)); */
  /* width: calc(100% + 1 * var(--space-sides)); */
  width: 100%;
  /* width: calc(var(--media-width-main)); */
}
.fullwide > .media {
  max-width: unset;
  margin: 0;
}
.widescreen-safe { /* ensure bottom doesnt run out of 16:9 bg media on (ironically) _thin_ screens */
  /* height: var(--header-with-menu-height); /1* just, some nice tall enough height - max-height will save us anyways *1/ */
  height: calc(1.20 * var(--header-with-menu-height)); /* just, some nice tall enough height - max-height will save us anyways */
  /* height: 40vh; /1* just, some nice tall enough height - max-height will save us anyways *1/ */
  max-height: calc((100vw - 2 * var(--space-sides)) / (16/9));
}
.center-content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.media-as-bg {
  position: absolute;
  left: 0;
  width: 100%;
  max-width: unset;
  object-fit: cover;
  margin: 0;
}
.section-with-media-bg-wrapper { /* like section-bg-wrapper but NOT using background for img/video */
  position: relative;
  width: 100%;
  overflow: hidden;
  /* border-top: var(--line-width) solid; */
}

.fade-3 { opacity: 0.30; }
.fade-5 { opacity: 0.62; }


.bg-static-section {
  position: relative;
  overflow-y: hidden;
}

.perspective-top { /* default perspective for main. */
  perspective: 100px;
  perspective-origin: top; /* starts where i want but then want it going other dir... or maybe going up-away better, more understated... */
}
.parallax-small { /* logo... perspective is 100px but prob use vars + calc */
  transform: translateZ(-8px) scale(1.08);
  transform-origin: top;
}
.parallax-big { /* logo... perspective is 100px but prob use vars + calc */
  transform: translateZ(-20px) scale(1.20);
  /* annoying how it clips logo if going heavier hmm */
}
.parallax-bg {
  transform: translateZ(-15px) scale(1.15); /* not actually being translated... 1.1 is the 1:1 scale btw obv but 1.2 looks good in this case */
  transform-style: preserve-3d;
  z-index: -1;
  /* overflow-y: auto; */
  transform-origin: top;
  /* transform-origin: 50% -150%; */ /* perf on chrome, mac safari, but fucks ios... */
  /* transform-origin: 50% -100%; */
}
.parallax-fg {
  transform: translateZ(10px) scale(0.90); /* not actually being translated... 1.1 is the 1:1 scale btw obv but 1.2 looks good in this case */
  /* transform-style: preserve-3d; */
  transform-origin: top;
  /* z-index: -1; */
  /* overflow-y: auto; */
}
.origin-toptop {
  /* transform-origin: 50% -100%; */
  transform-origin: 50% -250%;
}

#top-banner {
  opacity: 0.65;
  /* z-index: -1; */
  left: 0;
  top: 0;
  width: 100%;
  object-fit: cover;

  /* position: sticky; */
  /* /1* top: -14rem; /2* keeps from staying so low after *2/ *1/ */
  /* margin-top: -14rem; */
  /* /1* margin-bottom: -14rem; *1/ */
  /* /1* min-height: 50vh; *1/ */

  /* height: var(--banner-height); */
  /* overflow-y: hidden; /1* doesnt actually help, figure something out... also how it sometimes clips before supposed to end? *1/ */
  /* backdrop-filter: brightness(var(--anim-brightness)); */

  /* animation: top-backdrop 7s ease; */
}
@keyframes top-backdrop { /* well this'd be nice but it's CRAZY on the cpu bleh */
  0%, 50% { /* --anim-brightness: 0%; /1* no interpolation like this :/ *1/ */
    backdrop-filter: brightness(100%);
    -webkit-backdrop-filter: brightness(100%);
  } 80% {
    backdrop-filter: brightness(250%);
    -webkit-backdrop-filter: brightness(250%);
  } 100% {
    backdrop-filter: brightness(100%); /* or like "none" */
    -webkit-backdrop-filter: brightness(100%);
  }
}

.covering { /* just, hide stupidcrap stickies */
  z-index: 10;
  background: var(--gradient-bg-main);
}
.stick-up { /* make sticky just below header */
  position: sticky;
  top: var(--header-height);
}
#section-services { /* well, cant get parallaxin working without sticky, but surely should be possible? and kinda tricky doing without, here... ugha */
  z-index: 6;
}
#services {
  position: sticky;
  z-index: 12;
  top: 0;
  top: -25%;
  /* overflow: hidden; */
  /* margin-top: var(--space); */
  margin-bottom: 3rem; /* static size on purpose */
  /* border: 0; */
}

#intro {
  /* padding-top: 0; */
  /* position: sticky; */
  /* top: calc(var(--space) * 2); */
  /* margin-top: -14rem; */
}
#intro h1 {
  /* font-size: 3rem; */
  margin-top: 0;
}
#intro label {
  text-align: center;
}
#intro-end { /* lbp pic "YOU" */
  height: 80vh;
  max-height: 80vw; /* it's 1:1 ergo heit wit' makes sense */
}
#interlude-2 {
  z-index: 7;
}
#interlude-3 {
  z-index: 21;
  /* height: 50%; */
  /* transform: scale(1.2); */
}
section:last-of-type {
  z-index: 22;
}

#about-story {
  position: relative;
  z-index: 12;
  border-top: 0;
}
#headshot {
  width: 20%;
  max-width: 150px;
}
#byline > img {
  border-radius: 0.5em;
  border: 1px solid;
}
#multimeter {
  width: 30%;
  min-width: 150px;
  max-width: 300px;
}

#building-tools {
  z-index: 18;
}
.caption-inset {
  /* margin: calc(var(--space) / 2); */
  margin: 0.8em;
  font-size: 0.65rem; /* weird ass size when iphone landscape, guess bc em */
  opacity: 0.6;
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 30;
}
.caption-inset.right {
  right: 0;
  text-align: right;
}
.caption-inset.top {
  top: 0;
}
.float-with-caption {
  margin-bottom: calc(0.5 * var(--space));
}
.float-with-caption > .media {
  margin: 0;
  width: 100%; /* and then set on parent div */
}
.float-with-caption.left {
  float: left;
  margin-right: calc(1.0 * var(--space));
}
.float-with-caption.right {
  float: right;
  margin-left: calc(1.0 * var(--space));
}
figcaption, .float-with-caption {
  font-size: 0.8rem;
}

.float-wrapper { overflow: auto; }
/* .float-wrapper::after { */
/*   content: ""; */
/*   clear: both; */
/*   display: table; */
/* } */

.inline { display: inline; }
.box-regular { box-shadow: 2px 1px 17px 7px var(--box-regular-color); }
.box-faint {   box-shadow: 2px 1px 17px 7px var(--box-faint-color); }

footer {
  position: relative;
  /* padding-top: 0.5rem; */
  padding-bottom: env(safe-area-inset-bottom); /* handle iphone x+, no harm for rest. TODO also adjust top-shortcut */
  font-size: 0.8rem;

  border-left: var(--line-width) solid; /* connect bottom to main on left side */
}
.footer-content {
  display: flex;
  justify-content: space-between;
  flex-flow: row wrap;

  margin: 1rem 0.4rem;
}
.footer-column {
  flex: 1 0 auto;
  margin: 0.0rem 1.0rem 0.8rem;
  /* display: flex; */
}

.footer-column h3 {
  font-weight: 900;
  padding-bottom: 0.4rem;
}
.footer-column p {
  font-weight: 100;
}

.footer-icons {
  display: flex;
  flex: 1 2 auto;
  /* width: 100%; */
  /* flex-flow: column-wrap; */
  /* flex-flow: row; */
}
.footer-icons a {
}
.md-icon {
  width:  var(--space-lg);
  height: var(--space-lg);
}
.sm-icon {
  width:  var(--space);
  height: var(--space);
}
h3::first-letter { /* nice looking fancy. why isnt applying within category?? */
  font-size: 120%;
  filter: brightness(110%);
}

#footer-middle {
}
#footer-right {
  flex: 1 4 auto;
}

#to-top {
  position: fixed;
  right: calc(0.5 * var(--space));
  bottom: var(--space-lg);
  color: var(--fg-2);
}
#search {
  position: relative;
  right: 0;
  /* margin-right: var(--space-sides); */
  margin-left: var(--space-sides);
}

#services-gallery {
  /* margin-bottom: calc(2 * var(--space-lg)); */
}

#categories { /* List of services offered */
  /* FAILURE: can't get flexbox working like i want with nice alignment and also word-wrap and blabla */
  /* but this is maybe good enough? only works sorta ok with 1/2/3 cols because of specific content so  guess point is to use breakpoints and table or better yet grid */
  display: flex;
  justify-content: space-evenly;
  align-content: bottom;
  text-align: center;
  flex-wrap: wrap;
}

#categories > ul {
  /* flex: 1; */
  flex: 0 1 auto; /* flex: 1 0 auto; */
  margin:         calc(0.5 * var(--space));
  margin-top:     calc(0.5 * var(--space));
  margin-bottom:  calc(0.5 * var(--space));
  padding: calc(0.5 * var(--space-lg));
  border-radius: 0.15rem;
  min-width: 30%;
  text-align: left;
  font-size: 1.1rem;
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(2px);
  background: hsl(var(--hue-1), 7%, var(--lum-fg-2), 0.06);
  /* nah doesnt suit page/design. but effect is fine */
}
@media screen and (max-width: 390px) {
  #categories > ul {
    min-width: 45%; /* ensure no awkward two on one row, one on rest... not exactly universal solution tho :/ */
    /* oh and doesnt work for like if font small enough that two fit nicely gah */ /* easy enough with js tho.. */
    max-width: 100%;
  }
}
@media screen and (min-width: 801px) {
  #categories > ul { font-size: calc(110% + 0.3vw);
  }
}
@media screen and (min-width: 501px) and (max-width: 800px) {
  #categories > ul { font-size: calc(100% + 0.5vw);
  }
}
#categories > ul > * {
  margin: 0.2rem 0.2rem 0.4rem;
}
#categories > ul > li:first-of-type  {
  white-space: nowrap;
  margin-bottom: calc(0.5 * var(--space));
}
#categories > ul > li:first-of-type ~ li { /* suddenly started making the icons... weird inner shadow. so skip the header. */
  text-shadow: 1px 1px 2px var(--bg-1);
}
#categories > ul i {
  font-size: 1.4em;
  background: linear-gradient(-30deg, hsla(20, 35%, 70%, 0.80), var(--fg-2));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
#categories > ul h3 {
  display: inline;
  position: relative;
}
#categories > ul h3::after { /* shitty underline didnt end up too hot hmm */
  content: "";
  height: 2.5px;
  background: linear-gradient(to right, hsla(8, 30%, 78%, 0.7), var(--fg-2) 130%);
  width: 100%;
  transform: skew(-20deg);
  position: absolute;
  bottom: -1px;
  left: -2px;
  z-index: -1;
}
#categories > ul li {
  /* margin-left: calc(2 * var(--space)); */
  font-size: 0.80em;
  text-align: left;
  /* list-style-type: '_'; */
  /* text-shadow: 1px 1px 2px var(--bg-1); */
}
.fas {
  color: var(--fg-2);
}
/* safari just cannot hack the parallaxin and stickin and all */
/* _::-webkit-full-page-media, _:future, :root .safari_only { */
@media not all and (min-resolution:.001dpcm) {
  .parallax-small { transform: translateZ(-0px) scale(1.00);
  } .parallax-big { transform: translateZ(-0px) scale(1.00);
  } .parallax-bg  { transform: translateZ(-0px) scale(1.00);
  } .parallax-fg  { transform: translateZ(0px)  scale(1.00);
  }

  .stick-up { /* safari is being way irresponsible drawing img sticky layers.. */
    position: relative;
    top: initial;
  }
}
